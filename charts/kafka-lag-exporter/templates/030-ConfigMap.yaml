apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kafka-lag-exporter.fullname" . }}-configmap
  labels:
    app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
    helm.sh/chart: {{ include "kafka-lag-exporter.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  application.conf: |
    kafka-lag-exporter {
      port = {{ .Values.service.port }}
      poll-interval = {{ .Values.pollIntervalSeconds }} seconds
      lookup-table-size = {{ .Values.lookupTableSize }}
      client-group-id = "{{ .Values.clientGroupId }}"
      kafka-client-timeout = {{ .Values.kafkaClientTimeoutSeconds }} seconds
      clusters = [
        {{- range $cluster := .Values.clusters }}
        {
          name = "{{ $cluster.name }}"
          bootstrap-brokers = "{{ $cluster.bootstrapBrokers }}"
          {{- if $cluster.groupWhitelist }}
          group-whitelist = [
            {{- $lastIndex := sub (len $cluster.groupWhitelist) 1}}
            {{- range $i, $whitelist := $cluster.groupWhitelist }}
            {{ quote $whitelist }}{{- if ne $i $lastIndex -}}, {{ end }}
            {{- end }}
          ]
          {{- end }}
          {{- if $cluster.groupBlacklist }}
          group-blacklist = [
            {{- $lastIndex := sub (len $cluster.groupBlacklist) 1}}
            {{- range $i, $blacklist := $cluster.groupBlacklist }}
            {{ quote $blacklist }}{{- if ne $i $lastIndex -}}, {{ end }}
            {{- end }}
          ]
          {{- end }}
          {{- if $cluster.topicWhitelist }}
          topic-whitelist = [
            {{- $lastIndex := sub (len $cluster.topicWhitelist) 1}}
            {{- range $i, $whitelist := $cluster.topicWhitelist }}
            {{ quote $whitelist }}{{- if ne $i $lastIndex -}}, {{ end }}
            {{- end }}
          ]
          {{- end }}
          {{- if $cluster.topicBlacklist }}
          topic-blacklist = [
            {{- $lastIndex := sub (len $cluster.topicBlacklist) 1}}
            {{- range $i, $blacklist := $cluster.topicBlacklist }}
            {{ quote $blacklist }}{{- if ne $i $lastIndex -}}, {{ end }}
            {{- end }}
          ]
          {{- end }}
          consumer-properties = {
            {{- range $key, $val := $cluster.consumerProperties }}
            {{ $key }} = {{ quote $val }}
            {{- end }}
          }
          admin-client-properties = {
            {{- range $key, $val := $cluster.adminClientProperties }}
            {{ $key }} = {{ quote $val }}
            {{- end }}
          }
          labels = {
            {{- range $key, $val := $cluster.labels }}
            {{ $key }} = {{ quote $val }}
            {{- end }}
          }
        }
        {{- end }}
      ]

      {{- $sinks := list -}}
      {{- if .Values.reporters.prometheus.enabled }}
        {{- $sinks = append $sinks "\"PrometheusEndpointSink\"" }}
      reporters.prometheus.port = {{ .Values.reporters.prometheus.port }}
      {{- end  }}

      {{- if .Values.reporters.graphite.enabled }}
        {{- $sinks = append $sinks "\"GraphiteEndpointSink\"" }}
      reporters.graphite.host = {{ .Values.reporters.graphite.host | quote }}
      reporters.graphite.port = {{ .Values.reporters.graphite.port }}
        {{- if .Values.reporters.graphite.prefix }}
      reporters.graphite.prefix = {{ .Values.reporters.graphite.prefix | quote }}
        {{- end  }}
      {{- end  }}

      {{- if .Values.reporters.influxdb.enabled }}
        {{- $sinks = append $sinks "\"InfluxDBPusherSink\"" }}
      reporters.influxdb.endpoint = {{ .Values.reporters.influxdb.endpoint | quote }}
      reporters.influxdb.port = {{ .Values.reporters.influxdb.port }}
      reporters.influxdb.database = {{ .Values.reporters.influxdb.database | quote }}
        {{- if .Values.reporters.influxdb.username }}
      reporters.influxdb.username = {{ .Values.reporters.influxdb.username | quote }}
        {{- end  }}
        {{- if .Values.reporters.influxdb.password }}
      reporters.influxdb.password = {{ .Values.reporters.influxdb.password | quote }}
        {{- end  }}
      reporters.influxdb.async = {{ .Values.reporters.influxdb.async }}
      {{- end  }}
      sinks = [{{ join ", " $sinks }}]
      watchers = {
        strimzi = "{{ .Values.watchers.strimzi }}"
      }
      metric-whitelist = [
        {{- $lastIndex := sub (len .Values.metricWhitelist) 1}}
        {{- range $i, $whitelist := .Values.metricWhitelist }}
        {{ quote $whitelist }}{{- if ne $i $lastIndex -}}, {{ end }}
        {{- end }}
      ]
    }

    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "{{ .Values.akkaLogLevel }}"
      logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    }
  logback.xml: |
    <configuration>
        <variable name="ROOT_LOG_LEVEL" value="{{ .Values.rootLogLevel }}" />
        <variable name="KAFKA_LAG_EXPORTER_LOG_LEVEL" value="{{ .Values.kafkaLagExporterLogLevel }}" />
        <variable name="KAFKA_LAG_EXPORTER_KAFKA_LOG_LEVEL" value="{{ .Values.kafkaLogLevel }}" />
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%date{ISO8601} %-5level %logger{36} %X{akkaSource} - %msg %ex%n</pattern>
            </encoder>
        </appender>
        <logger name="org.apache.kafka" level="${KAFKA_LAG_EXPORTER_KAFKA_LOG_LEVEL}"/>
        <logger name="com.lightbend.kafkalagexporter" level="${KAFKA_LAG_EXPORTER_LOG_LEVEL}"/>
        <root level="${ROOT_LOG_LEVEL}">
            <appender-ref ref="STDOUT" />
        </root>
    </configuration>
